<TeXmacs|1.0.7.18>

<style|generic>

<\body>
  <\render-exercise|Exercise 1.10>
    The following procedure computes a mathematical function called
    Ackermann's function.

    <\scm-code>
      (define (A x y)

      \ \ (cond ((= y 0) 0)

      \ \ \ \ \ \ \ \ ((= x 0) (* 2 y))

      \ \ \ \ \ \ \ \ ((= y 1) 2)

      \ \ \ \ \ \ \ \ (else (A (- x 1)

      \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (A x (- y 1))))))
    </scm-code>

    What are the values of the following expressions?

    <\scm-code>
      (A 1 10)

      \;

      (A 2 4)

      \;

      (A 3 3)
    </scm-code>

    Consider the following procedures, where <scm|A> is the procedure defined
    above:

    <\scm-code>
      (define (f n) (A 0 n))

      \;

      (define (g n) (A 1 n))

      \;

      (define (h n) (A 2 n))

      \;

      (define (k n) (* 5 n n))
    </scm-code>

    Give concise mathematical definitions for the functions computed by the
    procedures <scm|f>, <scm|g>, and <scm|h> for positive integer values of
    <scm|n>. For example, <scm|(k n)> computes <math|5*n<rsup|2>>.

    <\answer>
      \;

      Having the procedure defined above, we can easily express Ackermann's
      function mathematically in choices as the following:
    </answer>

    <\equation*>
      A <around*|(|x\<comma\>y|)>=<choice|<tformat|<table|<row|<cell|0>|<cell|y=0>>|<row|<cell|2*y>|<cell|x=0>>|<row|<cell|2>|<cell|y=1>>|<row|<cell|A
      <around*|(|x-1\<comma\>A <around*|(|x\<comma\>y-1|)>|)>>|<cell|otherwise>>>>>
    </equation*>

    Therefore, as is shown in the following, we can evaluate the expressions
    <scm|(A 1 10)>, <scm|(A 2 4)> and <scm|(A 3 3)> step by step,\ 

    <\eqnarray*>
      <tformat|<table|<row|<cell|A <around*|(|1\<comma\>10|)>>|<cell|=>|<cell|A
      <around*|(|0\<comma\>A <around*|(|1\<comma\>9|)>|)>>>|<row|<cell|>|<cell|=>|<cell|2\<times\>A
      <around*|(|1\<comma\>9|)>>>|<row|<cell|>|<cell|=>|<cell|2\<times\>A
      <around*|(|0\<comma\>A <around*|(|1\<comma\>8|)>|)>>>|<row|<cell|>|<cell|=>|<cell|2\<times\>2\<times\>A
      <around*|(|1\<comma\>8|)>>>|<row|<cell|>|<cell|=>|<cell|2<rsup|2>\<times\>A
      <around*|(|1\<comma\>8|)>>>|<row|<cell|>|<cell|\<vdots\>>|<cell|\<cdots\>>>|<row|<cell|>|<cell|=>|<cell|2<rsup|9>\<times\>A
      <around*|(|1\<comma\>1|)>>>|<row|<cell|>|<cell|=>|<cell|2<rsup|9>\<times\>2>>|<row|<cell|>|<cell|=>|<cell|2<rsup|10>>>|<row|<cell|>|<cell|=>|<cell|1024>>>>
    </eqnarray*>

    <\eqnarray*>
      <tformat|<table|<row|<cell|A <around*|(|2\<comma\>4|)>>|<cell|=>|<cell|A
      <around*|(|1\<comma\>A<around*|(|2\<comma\>3|)>|)>>>|<row|<cell|>|<cell|=>|<cell|2<rsup|A
      <around*|(|2\<comma\>3|)>>>>|<row|<cell|>|<cell|=>|<cell|2<rsup|A
      <around*|(|1\<comma\>A <around*|(|2\<comma\>2|)>|)>>>>|<row|<cell|>|<cell|=>|<cell|2<rsup|2<rsup|A
      <around*|(|2,2|)>>>>>|<row|<cell|>|<cell|=>|<cell|2<rsup|2<rsup|2<rsup|A<around*|(|2\<comma\>1|)>>>>>>|<row|<cell|>|<cell|=>|<cell|2<rsup|2<rsup|2<rsup|2>>>>>|<row|<cell|>|<cell|=>|<cell|2<rsup|2<rsup|4>>>>|<row|<cell|>|<cell|=>|<cell|2<rsup|16>>>|<row|<cell|>|<cell|=>|<cell|65536>>>>
    </eqnarray*>

    <\eqnarray*>
      <tformat|<table|<row|<cell|A <around*|(|3\<comma\>3|)>>|<cell|=>|<cell|A
      <around*|(|2\<comma\>A <around*|(|3\<comma\>2|)>|)>>>|<row|<cell|>|<cell|=>|<cell|A
      <around*|(|2\<comma\>A<around*|(|2\<comma\>A
      <around*|(|3\<comma\>1|)>|)>|)>>>|<row|<cell|>|<cell|=>|<cell|A
      <around*|(|2\<comma\>A <around*|(|2\<comma\>2|)>|)>>>|<row|<cell|>|<cell|=>|<cell|A
      <around*|(|2\<comma\>A <around*|(|1\<comma\> A
      <around*|(|2\<comma\>1|)>|)>|)>>>|<row|<cell|>|<cell|=>|<cell|A
      <around*|(|2\<comma\>A <around*|(|1\<comma\>2|)>|)>>>|<row|<cell|>|<cell|=>|<cell|A
      <around*|(|2\<comma\>A <around*|(|0\<comma\>A
      <around*|(|1\<comma\>1|)>|)>|)>>>|<row|<cell|>|<cell|=>|<cell|A
      <around*|(|2\<comma\>A <around*|(|0\<comma\>2|)>|)>>>|<row|<cell|>|<cell|=>|<cell|A
      <around*|(|2\<comma\>2\<times\>2|)>>>|<row|<cell|>|<cell|=>|<cell|A
      <around*|(|2\<comma\>4|)>>>|<row|<cell|>|<cell|=>|<cell|2<rsup|2<rsup|4>>>>|<row|<cell|>|<cell|=>|<cell|2<rsup|16>>>|<row|<cell|>|<cell|=>|<cell|65536>>>>
    </eqnarray*>

    Notice that Ackermann's function <math|A <around*|(|x\<comma\>y|)>=2*y>
    whenever <math|x=0>, thus, we can easily put down the definition for
    functions computed by procedure <scm|f> mathematically,

    <\equation*>
      f <around*|(|n|)>=2*n
    </equation*>

    Take a glance at the process generated by evaluating <math|A
    <around*|(|1\<comma\>10|)>> above, the evolution of this expression
    revealed a general pattern for functions in terms of procedure <scm|g>,

    <\equation*>
      g <around*|(|n|)>=2<rsup|n>
    </equation*>

    Similarly, we can derive the mathematical expression for functions
    generated by procedure <scm|h> intuitively from the evaluating
    progression for <math|A <around*|(|2\<comma\>4|)>>,

    <\equation*>
      h <around*|(|n|)>=2<rsup|2<rsup|n>>
    </equation*>
  </render-exercise>
</body>